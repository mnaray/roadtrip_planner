services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Performance optimizations for PostgreSQL
    command: >
      postgres
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c work_mem=4MB
      -c max_connections=100
      -c random_page_cost=1.1
      -c log_statement=none
      -c log_duration=off

  web:
    build: .
    command: ["./bin/docker-entrypoint", "bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
      - node_modules_cache:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_HOST: db
      RAILS_ENV: development
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  bundle_cache:
  node_modules_cache: